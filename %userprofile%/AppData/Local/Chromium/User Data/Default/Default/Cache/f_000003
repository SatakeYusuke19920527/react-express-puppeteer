//
//	FULL-WEB 共通スクリプト
//	すべて cnfw_ で始めること
//  多言語化実装の関係で、このファイル内では日本語文字列は使えない
//
if (typeof (window.console) === "undefined") {
    window.console = {
        log: function () { } // 何もしない関数 とする
    }
}
window.onerror = errH;
function errH(desc) {
	window.status = "Error - " + desc;
	console.log("Error - " + desc);
	return true;
}

window.document.onmousewheel = WheelEv;
function WheelEv() {
    if (window.event.shiftKey) return false;
}

var _myRootWin;
var _hasRootWin = false;

var dialogArguments;
var cnfwReturnValue
function cnfwShowModalDialog(url, args, options, callback) {
    cnfwReturnValue = null;
    dialogArguments = args;
    var ops = options.split(";");
    var param = [];
    for (var n = 0; n < ops.length; n++) {
        var op = ops[n].split(":");
        var key = $.trim(op[0]);
        var v = $.trim(op[1]);
        param[key] = v;
    }
    var width = 640;
    var height = 480;
    if (param["dialogWidth"]) {
        width = param["dialogWidth"].replace("px", "") - 0
    };
    if (param["dialogHeight"]) { height = param["dialogHeight"].replace("px", "") - 0;}
    $('#cnfwModalDialogFrame').dialog({
        autoOpen: false,
        width: width + 50,
        height: height + 70,
        modal: true,
        open: function () {
            $("#cnfwModalDialogFrame").append('<iframe id="cnfwIframeDiv" frameborder="0" style="border-width:0;"></iframe>');
            //iframeにリンク属性と、ウィンドウサイズを追加
            $("#cnfwIframeDiv").attr({
                src: url,
                width: width + 'px',
                height: height + 'px'
            }).on('load', function () {
                var _tmrTitle;
                var _retryCnt = 3;
                _tmrTitle = setInterval(function () {
                    _retryCnt--;
                    var d = $('#cnfwIframeDiv')[0].contentDocument;
                    if (d&&d.title) {
                        $('.ui-dialog-title').text(d.title);
                        _retryCnt = 0;
                    }
                    if (_retryCnt <= 0) {
                        clearInterval(_tmrTitle);
                    }
                }, 30);
            });
            var top = $("#cnfwModalDialogFrame").parent().position().top;
            var winHeight = window.innerHeight;
            top = (winHeight - height - 50) / 2 + $(window).scrollTop();
            if (top < 0) top = 0;
            if (param["top"]) { top = param["top"].replace("px", "") - 0;}
            $("#cnfwModalDialogFrame").parent().css('top', top);
        },
        close: function () {
            if (cnfwReturnValue == null) cnfwReturnValue = false;
            $("#cnfwIframeDiv").remove();
            if (callback) callback(cnfwReturnValue, dialogArguments);
        }
    }).dialog('open');
}
function cnfwCloseModalDialog() {

    if ($('#cnfwModalDialogFrame').dialog) {
        $('#cnfwModalDialogFrame').dialog('close');
    } else {
        $('button.ui-dialog-titlebar-close').click();
    }
}

// KB912945対応

function cnfw_912945(str){
	document.write(str);
}   

function cnfw_setCookies(key, subkey, value) {
    var values = subkey + "=" + value;
    var cookie = cnfw_getCookie(key);
    if (cookie.length > 0) {
        var r2 = new RegExp("&" + subkey + "=([^&]+)&");
        var v = ("&" + cookie + "&").match(r2);
        if (v != null) {
            values = ("&" + cookie + "&").replace("&" + subkey + "=" + v[1] + "&", "&" + subkey + "=" + value + "&");
            values = values.substring(1, values.length - 1);
            document.cookie = key + "=" + values + "; expires=Thu, 1-Jan-2080 00:00:00 GMT";
            return;
        }
        values = cookie + "&" + subkey + "=" + value;
    }
    document.cookie = key + "=" + values + "; expires=Thu, 1-Jan-2080 00:00:00 GMT";
}

function cnfw_getCookie(key) {
    var ck = document.cookie + ";";
    var r = new RegExp(key + "=([^;]+);");
    var path = ck.match(r);
    if (path != null) {
        return path[1];
    } else {
        return "";
    }
}

function cnfw_getSubCookie(key, subkey) {
    var ck = document.cookie + ";";
    var r = new RegExp(key + "=([^;]+);");
    var path = ck.match(r);
    var cksub = "";
    if (path != null) {
        cksub = path[1] + "&";
    } else {
        return "";
    }
    var r2 = new RegExp(subkey + "=([^&]+)&");
    var path2 = cksub.match(r2);
    if (path2 != null) {
        return path2[1];
    } else {
        return "";
    }
}

//	ウィンドウ位置とサイズの読み込み

function cnfw_loadWinPosition(key, p, initp) {
    if (initp) {
        p[0] = initp[0];
        p[1] = initp[1];
        p[2] = initp[2];
        p[3] = initp[3];
    } else {
        p[0] = 0;
        p[1] = 0;
        p[2] = 700;
        p[3] = 700;
    }
    var ck = cnfw_getCookie("WinPos") + ";";
    var r = new RegExp(key + "=(\\-?\\d+),(\\-?\\d+),(\\d+),(\\d+)");
    var pos = ck.match(r);
    if (pos != null) {
        p[0] = pos[1];
        p[1] = pos[2];
        p[2] = pos[3];
        p[3] = pos[4];
    }
    var rw = GetRootWin();
    if (rw != null && rw['m_ldiff' + key]) {
        p[0] = parseInt(p[0]) + parseInt(rw['m_ldiff' + key]);
        p[1] = parseInt(p[1]) + parseInt(rw['m_tdiff' + key]);
    }
    if (p[0] > screen.availWidth) p[0] = 0;
    if (p[1] < 0) p[1] = 0;
    if (p[1] > screen.availHeight) p[1] = 0;
    if (p[2] < 0) p[2] = initp[2];
    if (p[2] > screen.availWidth) p[2] = screen.availWidth;
    if (p[3] < 0) p[3] = initp[3];
    if (p[3] > screen.availHeight) p[1] = screen.availHeight;
}

//	ウィンドウ位置とサイズの書き込み

function cnfw_saveWinPosition(key) {
    var lpos = window.screenLeft;
    var tpos = window.screenTop;
    var wsize = window.innerWidth;
    var hsize = window.innerHeight;
    cnfw_setCookies("WinPos", key, lpos + "," + tpos + "," + wsize + "," + hsize);
}

//	チェックアウト先の読み込み

function cnfw_loadLastCoPath() {
    var p = "c:\\davtmp";
    var ck = cnfw_getSubCookie("Paths", "LastCoPath");
    if (ck.length > 0) {
        p = ck;
    }
    return p;
}

//	チェックアウト先の書き込み

function cnfw_saveLastCoPath(p) {
    cnfw_setCookies("Paths", "LastCoPath", p);
}

//	取り出し先の読み込み

function cnfw_loadLastGetPath() {
    var p = "c:\\davtmp";
    var ck = cnfw_getSubCookie("Paths", "LastGetPath");
    if (ck.length > 0) {
        p = ck;
    }
    return p;
}

//	取り出し先の書き込み

function cnfw_saveLastGetPath(p) {
    cnfw_setCookies("Paths", "LastGetPath", p);
}

//	取り出し形式の読み込み(0:pdf,1:src,2:tiff)

function cnfw_loadLastGetType(typ, isMulti) {
    var p = typ;
    var ck = document.cookie + ";";
    var r = new RegExp("LastGetType" + isMulti + "=([^;]+);");
    var val = ck.match(r);
    if (val != null) {
        p = val[1];
    }
    return p;
}

//	取り出し形式の書き込み(0:pdf,1:src,2:tiff)

function cnfw_saveLastGetType(typ, isMulti) {
    document.cookie = "LastGetType" + isMulti + "=" + typ + "; expires=Thu, 1-Jan-2080 00:00:00 GMT";
}

//	CSV出力先の読み込み

function cnfw_loadLastCsvPath(key) {

    var p = "c:\\davtmp\\";
    if (key == undefined) {
        p += "export.csv";
        key = "LastCsvPath";
    } else {
        p += (key + ".csv");
        key = "Last" + key + "Path";
    }
    var ck = cnfw_getSubCookie("Paths", key);
    if (ck.length > 0) {
        p = ck;
    }
    return p;
}

//	CSV出力先の書き込み

function cnfw_saveLastCsvPath(p, key) {
    if (key == undefined) {
        cnfw_setCookies("Paths", "LastCsvPath", p);
    } else {
        cnfw_setCookies("Paths", "Last" + key + "Path", p);
    }
}

//	構成フィルター設定の読み込み

function cnfw_loadUsePSFilter() {
    var usePS = false;
    var ck = document.cookie + ";";
    var r = new RegExp("UsePSFilter=([^;]+);");
    var temp = ck.match(r);
    if (temp != null) {
        if (temp[1] == "true") {
            usePS = true;
        }
    }
    return usePS;
}

//	構成フィルター設定の書き込み

function cnfw_saveUsePSFilter(usePS) {
    document.cookie = "UsePSFilter=" + usePS + "; expires=Thu, 1-Jan-2080 00:00:00 GMT";
}

//	最大出力階層設定の読み込み

function cnfw_loadMaxOutLevel() {
    var maxLevel = 0;
    var ck = document.cookie + ";";
    var r = new RegExp("MaxOutLevel=([^;]+);");
    var temp = ck.match(r);
    if (temp != null) {
        maxLevel = temp[1];
    }
    return maxLevel;
}

//	最大出力階層の書き込み

function cnfw_saveMaxOutLevel(maxLevel) {
    document.cookie = "MaxOutLevel=" + maxLevel + "; expires=Thu, 1-Jan-2080 00:00:00 GMT";
}

//	送り先 WF の読み込み

function cnfw_loadLastSendWorkPath() {
    var p = "";
    var ck = cnfw_getSubCookie("Paths", "LastSendWorkPath");
    if (ck.length > 0) {
        p = ck;
    }
    return p;
}

//	送り先 WF の書き込み

function cnfw_saveLastSendWorkPath(p) {
    cnfw_setCookies("Paths", "LastSendWorkPath", p);
}

//	自動的に閉じるオプションの読み込み

function cnfw_loadAutoCloseFlag() {
    var checked = false;
    var ck = document.cookie + ";";
    var r = new RegExp("AutoCloseFlag=([^;]+);");
    var chk = ck.match(r);
    if (chk != null) {
        if (chk[1] == "true") {
            checked = true;
        }
    }
    return checked;
}

//	自動的に閉じるオプションの書き込み

function cnfw_saveAutoCloseFlag(checked) {
    document.cookie = "AutoCloseFlag=" + checked + "; expires=Thu, 1-Jan-2080 00:00:00 GMT";
}

//	メインの検索オプションの読み込み

function cnfw_LoadQuickSearchOption() {
    var typ = -1;
    var ck = document.cookie + ";";
    var r = new RegExp("QuickSearchOption=([^;]+);");
    var t = ck.match(r);
    if (t != null) {
        typ = t[1];
    }
    return typ;
}

//	メインの検索オプションの書き込み

function cnfw_SaveQuickSearchOption(typ) {
    document.cookie = "QuickSearchOption=" + typ + "; expires=Thu, 1-Jan-2080 00:00:00 GMT";
}


//	文字列の追加

function AddValue(objText, val) {
    var src = objText.value;
    var newVal;
    var r = new RegExp("([^\n\r]+)", "g");
    var v = src.match(r);
    if (v != null) {
        if (("\n" + v.join("\n") + "\n").indexOf("\n" + val + "\n") >= 0) {
            newVal = src;
        } else {
            newVal = val + "\n" + v.join("\n");
        }
    } else {
        newVal = val;
    }
    objText.value = newVal;
}

//	テキストボックス行数調整
function CheckRow(elText, minval) {
    var r = new RegExp("([^\n\r]+)", "g");
    var selText = "dummy" + elText.value + "dummy";
    var v = selText.match(r);
    if (v != null) {
        if (minval < v.length)
            if (v.length > 10)
                elText.rows = 10;
            else
                elText.rows = v.length;
        else
            elText.rows = minval;
    }
}

//	メインの更新

function cnfw_UpdateMainList(pw) {
    if (pw == undefined) pw = top;
    if (pw.g_searching == true) return;
    if (pw.UpdateView) {
        pw.UpdateView();
        return;
    }

    if ((window.event != null) && (window.event.ctrlKey) && (window.event.keyCode == 116)) {
        //  Ctrl+F5の場合は、ツリー側(フォルダ側)を更新する
        var w;
        w = top.frames["contents"];
        w.RefreshFolder();

    } else {
        pw.g_keepconditionpane = true;
        var w = pw.frames["main"];
        if (w == undefined) return;

        //  選択行保持のため、FileList.aspxのFidsパラメータをdefault.aspxのp_fidsパラメータにコピー。
        //　そののち、searching.aspxからdefault.aspxのp_fidsの値を取得してSesssion("cnSelFids")に格納するようにする（119132）
        w.SaveSelectedFiles();
        var fids = w.document.getElementById('Fids').value;
        var p_fids = top.document.getElementById('p_fids');
        if (p_fids) p_fids.value = fids;
        w.location.replace("searching.aspx?keeppage=true");
    }
}

//	指定フォルダの更新

function cnfw_UpdateFolder(pw, path) {
    var w;
    if (pw == undefined)
        w = top.frames["contents"];
    else
        w = pw.frames["contents"];

    if (w == undefined) return;
    w.UpdateFolder(path)
}

//	フォームの Submit

function cnfw_SubmitForm(frm) {
    frm.submit();
}

//	チェックアウト状況リストの更新

function cnfw_UpdateCoList(pw) {
    if (pw != undefined) {
        w = pw.colist_win;
        if (w != undefined) {
            if (!w.closed) {
                w.document.getElementById("fcollist").submit();
                w.focus();
            }
        }
    }
}

//	メール通知一覧ウィンドウを開く

function ShowMailList(strFullPath) {
    var w;
    var param = "";
    var pw = window.parent;
    if (pw != undefined) {
        w = pw.maillist_win;
        if (w != undefined) {
            if (!w.closed) {
                w.document.location.href = "maillist.aspx";
                w.focus();
                return false;
            }
        }
    }
    var sendpath = encodeURI(strFullPath);
    if (strFullPath != undefined) {
        param = "?" + "fullpath=" + sendpath;
    }

    var p = new Array();
    var l = cnfw_loadWinPosition("maillist", p);
    w = window.open("maillist.aspx" + param, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=800,height=600,resizable=yes,dependent=yes,status=yes", true);
    if (pw != undefined)
        pw.maillist_win = w;
    return false;
}

//	指定フォルダのファイル一覧表示

function cnfw_ShowFiles(fullpath, pw) {
    var option = "";
    if (fullpath.indexOf("\\") == -1) option = "?empty=true";
    if (pw == undefined) {
        top.g_currentpath = fullpath;
        top.g_activepath = fullpath;
        top.g_keepconditionpane = false;
        top.frames["main"].document.location.replace("searching.aspx" + option);
    } else {
        pw.g_currentpath = fullpath;
        pw.g_activepath = fullpath;
        pw.g_keepconditionpane = false;
        pw.frames["main"].document.location.replace("searching.aspx" + option);
    }
}

//	日付データを文字列に変換

function cnfw_Date2String(date) {
    if (date == null)
        return "";

    yy = date.getYear();
    mm = date.getMonth() + 1;
    dd = date.getDate();
    if (yy < 2000) { yy += 1900; }
    if (mm < 10) { mm = "0" + mm; }
    if (dd < 10) { dd = "0" + dd; }
    return (yy + "/" + mm + "/" + dd);
}

//	要素の表示状態を変更する

function ToggleDisplay(oItems) {

    if ((oItems.style.display == "") || (oItems.style.display == "none")) {
        oItems.style.display = "block";
    } else {
        oItems.style.display = "none";
    }
}

//	フレーム無しで読み込まれたらトップページにリダイレクトする 

function cnfw_CheckDirectAccess() {
    if (top == self) {
        location.replace("default.aspx");
        return false;
    } else {
        return true;
    }
}

//	属性ウィンドウを開く

function cnfw_ShowProperty(fid, n, pw, pkey, editmode, ow, mid, nodeid, clientSockId) {
    var p = new Array();
    var l = cnfw_loadWinPosition("File", p);
    var w;
    var parapkey = "";
    if (pkey && pkey.length > 0) parapkey = "&pkey=" + pkey;
    var edit = "";
    if (editmode && editmode.length > 0) edit = "&edit=true";
    var paramid = "";
    if (mid && /\d+/.test(mid)) paramid = "&mid=" + mid;
    if (nodeid && /\d+/.test(nodeid)) paramid = "&nodeid=" + nodeid;
    var psockId = "";
    if (clientSockId && clientSockId.length > 0) {
        psockId = "&clientSockId=" + clientSockId;
    }
    if (ow == undefined) ow = window;
    w = ow.open("File.aspx?fid=" + fid + paramid + parapkey + edit + psockId + "&n=" + (n + 1) + "&wi=" + p[2], "", "left=" + p[0] + ",top=" + p[1] + ",width=" + p[2] + ",height=" + p[3] + ",resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    if (w == undefined)
        return;
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "propwin" + d.toUTCString());
    }
    return;
}

//  通知Now を表示

function cnfw_ShowMailNow(selFlsKey) {
    var wn = window.open("mailset.aspx?selFlsKey=" + selFlsKey, "_blank", "width=600,height=610,dependent=yes", true);
    if (wn == undefined) {
        return;
    }
}

//  BOM を表示

function cnfw_ShowBom(psid, direction, pw, expandlevel, locked, editmode, key, pkey) {
    var lv = 1;
    var lk = false;
    var p = new Array();
    var l = cnfw_loadWinPosition("BomWin", p);
    var wleft = p[0] - 3;
    var wtop = p[1] - 22;
    wleft = (wleft < 0) ? 0 : wleft;
    wtop = (wtop < 0) ? 0 : wtop;
    var w = p[2] - 30;  // aspx側でonresize()を実行させるため、少しだけ小さく表示
    var h = p[3] - 30;
    winOpts = "left=" + wleft + ",top=" + wtop + ",Width=" + w + ",Height=" + h + ",scrollbars=no,resizable=yes,status=yes";

    if (expandlevel != undefined)
        lv = expandlevel;
    if (locked != undefined)
        lk = locked;
    // あまり良い実装ではないので、modeの設定方法を考え直す必要がある。以下は暫定処置
    var mode = "&mode=c:d";
    if (editmode != undefined)
        if (editmode == true && direction == "c") mode = "";
    if (direction == "s") {
        direction = "c";
        mode = "&mode=s";
        if (editmode == true) mode = mode + ":e"
    } else if (direction == "a") {
        direction = "c";
        mode = "&mode=a";
    } else if (direction == "p") {
        if (editmode == true) mode = mode + ":e"
    } else if (direction == "t") {
        mode = "&mode=c:d:t";
    }
    var url = "bom.aspx?psid=" + psid + "&dir=" + direction + "&expand=" + lv + "&locked=" + lk + mode;
    if (key != undefined)
        url = "bom.aspx?bomkey=" + key + "&dir=r" + "&psid=" + psid;
    if (pkey)
        url = url + "&pkey=" + pkey;    //親BOMKEY

    var pathnm = pw.location.pathname.toLowerCase();
    if (pathnm.lastIndexOf("default.aspx") > 0) {
        pw.frames['main'].document.getElementById("bomframe").src = url;
    } else if (pathnm.lastIndexOf("file.aspx") > 0) {
        pw.frames["file"].document.getElementById("bomframe").src = url;
    } else if (pathnm.lastIndexOf("approvaldo.aspx") > 0 ||
        pathnm.lastIndexOf("revhist.aspx") > 0 ||
               pathnm.lastIndexOf("accesslog.aspx") > 0) {
        try {
            if (pw.opener && pw.opener.opener) {

                var pw = pw.opener.opener;
                pathnm = pw.location.pathname.toLowerCase()
                if (pathnm.lastIndexOf("bom.aspx") > 0) {
                    pw = pw.parent.parent;
                    pw.frames['main'].document.getElementById("bomframe").src = url;
                } else if (pathnm.lastIndexOf("default.aspx") > 0) {
                    pw.frames['main'].document.getElementById("bomframe").src = url;
                } else {
                    console.log("unknown path : " + pathnm);
                }
            } else {
                document.getElementById("bomframe").src = url;
            }
        } catch (e) {
            console.log(e.message);
        }
    }
}

//  スナップショット表示

function cnfw_ShowSnapshotList(psid, pw) {
    var w = window.open("snapshotlist.aspx?psid=" + psid, "_blank", "width=640,height=480,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "SnapshotWin" + d.toUTCString());
    }
}

//  構成比較を表示

function cnfw_ShowDiff(src, dst, pw, keySrc, keyDest) {
    if (keySrc == undefined) keySrc = "";
    if (keyDest == undefined) keyDest = "";
    var w = window.open("diffbom.aspx?src=" + src + "&dst=" + dst + "&keySrc=" + keySrc + "&keyDest=" + keyDest, "_blank", "width=640,height=640,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "BomDiffWin" + d.toUTCString());
    }
    return w;
}

//  DjVu を表示

function cnfw_ShowDjVu(fid, pw) {
    var p = new Array();
    var l = cnfw_loadWinPosition("djvuWin", p);
    var wleft = p[0] - 3;
    var wtop = p[1] - 22;

    wleft = (wleft < 0) ? 0 : wleft;
    wtop = (wtop < 0) ? 0 : wtop;
    winOpts = "left=" + wleft + ",top=" + wtop + ",Width=800,Height=600,scrollbars=yes,resizable=yes";
    var wn2 = window.open("djvuwin.aspx?fid=" + fid, "djvuWin" + fid, winOpts, true);
    if (wn2 == undefined) {
        return;
    }
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(wn2, "djvuWin" + d.toUTCString());
    }
}

//	イメージ大を表示(複数用)

function cnfw_CreateLargeImage(fid, pw) {
    var p = new Array();
    var l = cnfw_loadWinPosition("imgL", p);
    var wleft = p[0] - 3;
    var wtop = p[1] - 22;

    wleft = (wleft < 0) ? 0 : wleft;
    wtop = (wtop < 0) ? 0 : wtop;
    winOpts = "left=" + wleft + ",top=" + wtop + ",Width=512,Height=512,scrollbars=no,resizable=no";
    var wn2 = window.open("img.aspx?fid=" + fid, "", winOpts, true);
    if (wn2 == undefined) {
        return;
    }
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(wn2, "imgwin" + d.toUTCString());
    }
}

//	イメージ大を表示

function cnfw_ShowLargeImage(fid, pw) {
    var wn2;

    var p = new Array();
    var l = cnfw_loadWinPosition("imgL", p);
    var wleft = p[0] - 3;
    var wtop = p[1] - 22;

    wleft = (wleft < 0) ? 0 : wleft;
    wtop = (wtop < 0) ? 0 : wtop;
    winOpts = "left=" + wleft + ",top=" + wtop + ",Width=522,Height=512,scrollbars=no,resizable=no";
    wn2 = window.open("img.aspx?fid=" + fid, "LARGE", winOpts, true);
    if (wn2 == undefined) {
        return;
    }
    try {
        if (pw != undefined) {
            pw.img_win = wn2;
        }
    } catch (e) { }
}

//	イメージ（任意サイズ）を表示

function cnfw_ShowImageArbitrarySizeView(fid, pw) {
    var p = new Array();
    var l = cnfw_loadWinPosition("imgV", p);
    var wleft = p[0] - 3;
    var wtop = p[1] - 22;

    wleft = (wleft < 0) ? 0 : wleft;
    wtop = (wtop < 0) ? 0 : wtop;
    winOpts = "left=" + wleft + ",top=" + wtop + ",Width=512,Height=512,scrollbars=yes,resizable=yes";
    var wn2 = window.open("imgarb.aspx?fid=" + fid + "&type=4", "imgV", winOpts, true);
    if (wn2 == undefined) {
        return;
    }
    if (pw != undefined) {
        pw.AddWindow(wn2, "imgV");
    }
    wn2.focus();
}

//	イメージ大を閉じる

function cnfw_CloseLargeImage(pw) {
    var wn2;

    try {
        if (pw != undefined) {
            wn2 = pw.img_win;
            if (wn2 != undefined) {
                if (wn2.closed == false) {
                    wn2.window.close();
                    return;
                }
            }
        }
    } catch (e) { }
}

//	イメージ大を表示中のとき表示変更

function cnfw_DrawLargeImage(fid, pw) {
    var wn2;
    var url = "dl.aspx?fid=" + fid + "&type=0";

    try {
        if (pw != undefined) {
            wn2 = pw.img_win;

            if (wn2 != undefined) {
                if (wn2.closed == false) {
                    wn2.setimageurl(url);
                    wn2.focus();
                }
            }
        }
    } catch (e) { }
}

//	履歴ウィンドウを開く

function cnfw_ShowHistory(fid, pw) {
    var w;
    var p = new Array();
    var l = cnfw_loadWinPosition("revhist", p);
    w = window.open("revhist.aspx?fid=" + fid, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=800,height=600,resizable=yes,dependent=yes,scrollbars=yes,status=yes", true);
    if (w == undefined)
        return;
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "revhistwin" + d.toUTCString());
    }
}

//	権限設定ウィンドウを開く

function cnfw_ShowPermission(type, pw)
{
	var w;
	if (pw != undefined) {
		w = pw.permission_win;
		if (w != undefined) {
			if (!w.closed) {
				w.document.location.href = "setpermission.aspx?type=" + type;
				w.focus();
				return;
			}
		}
	}
	var p=new Array();
	var l=cnfw_loadWinPosition("setpermission",p);
	w = window.open("setpermission.aspx?type=" + type, "_blank", "left="+p[0]+",top="+p[1]+",width=600,height=600,resizable=yes,dependent=yes,scrollbars=no,status=yes",true);
	if (w == undefined)
		return;
	if (pw != undefined)
		pw.permission_win = w;
}

//	オプションウィンドウを開く



function cnfw_ShowOption(pw, login) {
    if (!GetEnabled('F025LK1000', false)) {
        return;
    }
    var w;
    if (pw != undefined) {
        w = pw.option_win;
        if (w != undefined) {
            if (!w.closed) {
                w.document.location.href = "option.aspx";
                w.focus();
                return;
            }
        }
    }
    var p = new Array();
    var l = cnfw_loadWinPosition("option", p);
    if (login == true) {
        w = window.open("../option.aspx", "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=700,height=490,resizable=no,dependent=yes,scrollbars=no,status=yes", true);
    }
    else {
        w = window.open("option.aspx", "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=700,height=490,resizable=no,dependent=yes,scrollbars=no,status=yes", true);
    }
    if (w == undefined)
        return;
    if (pw != undefined)
        pw.AddWindow(w, "option");
}

//	CSV 出力処理



function cnfw_GetCsv() {
    window.open("getcsv.aspx", "_blank", "width=510,height=480,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
}

//	登録処理


function cnfw_EntryFiles(name, shift, path, pw) {
    return cnfw_EntryFiles2(name, shift, path, pw, 0);
}
function cnfw_EntryFiles2(name, shift, path, pw, caller) {
    var arg;
    var enpath = encodeURI(path);
    var p = new Array();
    var l = cnfw_loadWinPosition("entry", p);
    var w = window.open(name + "?s=" + shift + "&caller=" + caller + "&p=" + enpath, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=640,height=320,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    if (pw != undefined) {
        pw.AddWindow(w, "entrywin");
    }
    return w;
}
function cnfw_EntryFiles3(name, shift, path, pw, caller, pfid) {
    var arg;
    var enpath = encodeURI(path);
    var p = new Array();
    var l = cnfw_loadWinPosition("entry", p);
    var w = window.open(name + "?s=" + shift + "&caller=" + caller + "&p=" + enpath + "&pfid=" + pfid, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=640,height=320,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    if (pw != undefined) {
        pw.AddWindow(w, "entrywin");
    }
    return w;
}

//	ファイルを開く

function cnfw_OpenFile(fid) {
    cnfw_GetFiles(fid);
}

//	ファイルを開く

function cnfw_OpenFiles(fid, pw, type, ftype) {
    if (ftype == undefined) ftype = "";
    var arg;
    var w;
    var p = new Array();
    var l = cnfw_loadWinPosition("getstat", p, [0, 0, 720, 400]);
    var devicePixelRatio = Math.round(top.devicePixelRatio * 100);
    var tmpPr = Math.round(top.outerWidth / top.innerWidth * 100);
    if (Math.abs(devicePixelRatio - tmpPr) < 10) {
        p[2] *= (devicePixelRatio / 100);
        p[3] *= (devicePixelRatio / 100);
    }
    if (fid > 0)
        w = window.open("getstat.aspx?open=true&fid=" + fid + "&ftype=" + ftype, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=" + p[2] + ",height=" + p[3] + ",resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    else if (type > 0)
        w = window.open("getstat.aspx?open=true&type=" + type + "&ftype=" + ftype, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=" + p[2] + ",height=" + p[3] + ",resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    else
        w = window.open("getstat.aspx?open=true&ftype=" + ftype, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=" + p[2] + ",height=" + p[3] + ",resizable=yes,dependent=yes,scrollbars=no,status=yes", true);

    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "getwin" + d.toUTCString());
    }
    return w;
}

//	取り出し処理

function cnfw_GetFiles(fid, pw, type, ftype) {
    if (ftype == undefined) ftype = "";
    var arg;
    var w;
    var p = new Array();
    var l = cnfw_loadWinPosition("getstat", p, [0, 0, 720, 400]);
    var devicePixelRatio = Math.round(top.devicePixelRatio * 100);
    var tmpPr = Math.round(top.outerWidth / top.innerWidth * 100);
    if (Math.abs(devicePixelRatio - tmpPr) < 10) {
        p[2] *= (devicePixelRatio / 100);
        p[3] *= (devicePixelRatio / 100);
    }
    if (fid > 0)
        w = window.open("getstat.aspx?fid=" + fid + "&ftype=" + ftype, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=" + p[2] + ",height=" + p[3] + ",resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    else if (type > 0)
        w = window.open("getstat.aspx?type=" + type + "&ftype=" + ftype, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=" + p[2] + ",height=" + p[3] + ",resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    else
        w = window.open("getstat.aspx?ftype=" + ftype, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=" + p[2] + ",height=" + p[3] + ",resizable=yes,dependent=yes,scrollbars=no,status=yes", true);

    var d = new Date();
    cnfw_AddNamedWin(pw, w, "getwin" + d.toUTCString());

    return w;
}

//	アクセスログ表示

function cnfw_ShowAccessLog(fid, pw) {
    var arg;
    var w;
    if (fid > 0)
        w = window.open("accesslog.aspx?fid=" + fid, "_blank", "resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    else
        w = window.open("accesslog.aspx", "_blank", "resizable=yes,dependent=yes,scrollbars=no,status=yes", true);

    var d = new Date();
    cnfw_AddNamedWin(pw, w, "accesslog" + d.toUTCString());

    return w;
}

//	チェックイン処理

function cnfw_CheckInFiles(fid, pw) {
    var arg;
    var w;
    var p = new Array();
    var l = cnfw_loadWinPosition("ci", p);
    if (fid == 0)
        w = window.open("ci.aspx", "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=640,height=320,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    else
        w = window.open("ci.aspx?fid=" + fid, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=640,height=320,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "ciwin" + d.toUTCString());
    }
    return w;
}

//	フォルダ取出しウィンドウを開く

function cnfw_DownloadFolder(pw, type) {
    if (GetEnabled("D009", true)) {
        var arg;
        var p = new Array();
        var l = cnfw_loadWinPosition("getstat", p);
        var w = window.open("getfolderstat.aspx?t=" + type, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=640,height=320,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
        if (pw != undefined) {
            var d = new Date();
            pw.AddWindow(w, "dlfolder" + d.toUTCString());
        }
    } else {
        if (pw == undefined) return;

        var work_frm = pw.frames["work"].frames["workFrame"].document;
        work_frm.location.href = "getfolderstat.aspx?t=" + type;
    }
    return w;
}

//	リンクウィンドウを開く



function cnfw_ShowLinkView(fid, dir, pw) {
    if (fid > 0) {
        var w;
        if (pw != undefined) {
            try {
                w = pw.linkview_win;
                if (w != undefined) {
                    if (!w.closed) {
                        w.document.location.href = "linkview.aspx?fid=" + fid + "&dir=" + dir;
                        w.focus();
                        return w;
                    }
                }
            } catch (e) {
                //なにもせずにとばす。例外が出る可能性があるのはw=pw.linkview_winの処。バグ114007
            }
        }
        var p = new Array();
        var l = cnfw_loadWinPosition("linkview", p);
        w = window.open("linkview.aspx?fid=" + fid + "&dir=" + dir, "linkview", "left=" + p[0] + ",top=" + p[1] + ",width=800,height=600,resizable=yes,dependent=yes,scrollbars=no", true);
        if (w == undefined)
            return w;

        if (pw != undefined) {
            if (pw.linkview_win) pw.linkview_win = w;
            else if (pw.AddWindow) pw.AddWindow(w, "linkview_win");
        }
        return w;
    }
}

//	検索条件ウィンドウを開く



function cnfw_ShowCondition(pw) {
    var w;
    if (pw != undefined) {
        w = pw.setcondition_win;
        if (w != undefined) {
            if (!w.closed) {
                w.document.location.href = "setcondition.aspx";
                w.focus();
                return;
            }
        }
    }
    var p = new Array();
    var l = cnfw_loadWinPosition("setcondition", p);
    w = window.open("setcondition.aspx", "", "left=" + p[0] + ",top=" + p[1] + ",width=920,height=340,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
    if (w == undefined)
        return;
    if (pw != undefined)
        pw.setcondition_win = w;
}

// UltraWebMenu のポップアップメニューを補足。


// igmenu_mouseup の最終部分を抜き出したもの。



function cnfw_igmenu_hideMenu(ItemId) {
    var ms = igmenu_getMenuByItemId(ItemId);
    ms.clearMenuTree(null, true);
    ig_startClick = false;
    if (ig_menuPopup != null) {
        ms.hideSubMenu(ig_menuPopup);
        ig_menuPopup = null;
    }
}

// チェックアウト開始指令をworkフォームに投げる


// StartCheckOut
function cnfw_setcmd_checkout(work_d, co_w, SelectFiles, cmd) {

    if (work_d == null) {
        return;
    }

    if (co_w == null) {
        return;
    }

    // チェックアウトデータを渡す

    work_d.getElementById("p_CoOpen").value = co_w.document.getElementById("D004RB1000").checked;
    work_d.getElementById("p_CoComment").value = encodeURI(co_w.document.getElementById("D004TB1000").value);
    work_d.getElementById("p_CoPath").value = encodeURI(co_w.document.getElementById("D004TB1001").value);
    work_d.getElementById("p_RevCheck").value = co_w.document.getElementById("D004CB1001").checked;
    work_d.getElementById("p_RevReason").value = encodeURI(co_w.document.getElementById("D004TB1003").value);
    work_d.getElementById("p_RevSummary").value = encodeURI(co_w.document.getElementById("D004TB1004").value);
    work_d.getElementById("p_RevNo").value = encodeURI(co_w.document.getElementById("D004TB1002").value);

    // チェックアウト命令文


    work_d.getElementById("p_op").value = cmd;
    work_d.getElementById("p_args").value = SelectFiles;
    work_d.getElementById("frm").submit();

}

//	承認依頼ウィンドウを開く

function cnfw_RequestApproval(pw) {
    var p = new Array();
    var l = cnfw_loadWinPosition("approvalwin", p);
    var w = window.open("Approval.aspx?mode=r&pback=false", "mnuApprovalRequest", "width=550,height=550,scrollbars=yes,resizable=yes,dependent=yes,status=yes", true);
    if (w == undefined)
        return;
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "approvalwin" + d.toUTCString());
    }
    try {
        w.focus();
    } catch (e) { }
}

//	承認依頼取消ウィンドウを開く

function cnfw_CancelApproval(pw) {
    var p = new Array();
    var l = cnfw_loadWinPosition("cancelapprovalwin", p);
    var w = window.open("ApprovalCancel.aspx?mode=c&pback=false", "mnuCancelRequest", "width=520,height=280,scrollbars=no,resizable=no,dependent=yes,status=yes", true);
    if (w == undefined)
        return;
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "cancelapprovalwin" + d.toUTCString());
    }
    try {
        w.focus();
    } catch (e) { }
}

//	改訂コメントウィンドウを開く

function cnfw_ShowRevComment(fid, rid, pw) {
    var arg;
    var p = new Array();
    var l = cnfw_loadWinPosition("revcomment", p);
    var w = window.open("revcomment.aspx?fid=" + fid + "&rid=" + rid, "_blank", "left=" + p[0] + ",top=" + p[1] + ",width=640,height=150,resizable=no,dependent=yes,scrollbars=no,status=yes", true);
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "revcomment" + d.toUTCString());
    }
    return w;
}

//	サムネイル割り当てウィンドウを開く
//  mode=0:サムネイル割り当て、=1:PDF割り当て

function cnfw_Attach(pw, mode) {
    var arg;
    var p = new Array();
    var l = cnfw_loadWinPosition("setthumbnail", p);
    var w = window.open("fwcmd.aspx?u=setthumbnail.aspx&mode=" + mode, "setthumbnail", "left=" + p[0] + ",top=" + p[1] + ",width=480,height=300,resizable=yes,dependent=yes,status=yes", true);
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "setthumbnail" + d.toUTCString());
    }
    w.focus();
    return w;
}
function cnfw_AttachStatus(pw, fid) {
    var arg;
    var p = new Array();
    var l = cnfw_loadWinPosition("setthumbnail", p);
    var w = window.open("ShowServerSideStatus.aspx?fid=" + fid, "ServerSideStatus", "left=" + p[0] + ",top=" + p[1] + ",width=480,height=300,resizable=yes,dependent=yes,status=yes", true);
    if (pw != undefined) {
        var d = new Date();
        pw.AddWindow(w, "ServerSideStatus" + d.toUTCString());
    }
    w.focus();
    return w;
}
function cnfw_AddNamedWin(pw, w, winname) {
    if (pw != undefined) {
        var url = pw.document.location.pathname.toLowerCase();
        if (url.indexOf("default.aspx") > 0 || url.indexOf("file.aspx") > 0 || url.lastIndexOf("/") == url.length - 1) {
            pw.AddWindow(w, winname);
        }
    }
}

//  メイン画面で開く

var tmr = 0;
var mainw;
var propw;
function cnfw_ShowMain(fid, pw, w) {
    if (pw) {
        cnfw_ShowFiles("%fid%\\" + fid, pw);
    } else {
        pw = window.open("default.aspx?fid=" + fid, "FullWEBMainWin");
        mainw = pw;
        propw = w;
        tmr = setInterval("AddWinToMain()", 1000);
    }
    return pw;
}
function AddWinToMain() {
    if (mainw.document.readyState != "complete")
        return;
    clearInterval(tmr);
    var d = new Date();
    mainw.AddWindow(propw, "propwin" + d.toUTCString());
    mainw = null;
    propw = null;
}

//  親子ウィンドウが閉じられているかどうかチェック

function cnfw_IsWinClosed(winVar) {
    var ua = navigator.userAgent;
    if (!!winVar) {
        if ((ua.indexOf('Gecko') != -1 || ua.indexOf('MSIE 4') != -1)
             && ua.indexOf('Win') != -1) {
            return winVar.closed;
        } else {
            return typeof winVar.document != 'object';
        }
    } else {
        return true;
    }
}

//  半角数値に変換

function ToNarrowNum(src) {
    return src.replace(/[^0123456789]/g, function (c) {
        var wnum = "０１２３４５６７８９";
        var nnum = new Array("0", "1", "2", "3", "4", "5", "6", "7", "8", "9");
        if (wnum.indexOf(c) == -1)
            return "";
        return nnum[wnum.indexOf(c)];
    });
}

//  数値チェック

function IsNumeric(num) {
    if (num.match(/[^0-9]/g)) {
        return false;
    }
    return true;
}

//  表示・非表示設定のチェック。GUI編集モードの時は常にtrue

function IsEnabled(resid) {
    return GetEnabled(resid, true);
}

//  有効無効のチェック。
//  modecheckをtrueにするとGUI編集モードかどうかを判定し、GUI編集モードの時は常にtrueを返す
//  falseの場合はGUI編集モードに関わらず[res], [resm]から値を取得してくる
function GetEnabled(resid, modecheck) {
    if (!modecheck) {
        modecheck = false
    }
    var isenabled = "false";
    try {
        $.ajax({
            url: "configmode.aspx",
            type: 'POST',
            async: false,
            data: {
                'isenabled': '',
                'resid': resid,
                'modecheck': modecheck
            },
            dataType: "text",
            success: function (ret) {
                isenabled = ret;
            },
            error: function () {
                alert("error:");
            }
        });
    } catch (e) { }

    if (isenabled == "true") {
        return true;
    } else {
        return false;
    }
}
//  有効無効のチェック。
//  modecheckをtrueにするとGUI編集モードかどうかを判定し、GUI編集モードの時は常にtrueを返す
//  falseの場合はGUI編集モードに関わらず[res], [resm]から値を取得してくる
//  residにはカンマ区切りのIDを渡すこと。返値は表示設定されていたIDの配列で返る
function GetEnabledList(resid, modecheck) {
    var url = ""
    if (!modecheck) {
        modecheck = false
    }
    var ids = "";
    try {
        $.ajax({
            url: "configmode.aspx",
            type: 'POST',
            async: false,
            data: {
                'getenabledlist': '',
                'resid': 'GetRouteSettingUgid',
                'modecheck': modecheck
            },
            dataType: "text",
            success: function (ret) {
                ids = ret.split(",");   //有効だったIDがカンマ区切りでかえってくるのでsplitして配列で返す。
            },
            error: function () {
            }
        });
    } catch (e) { }
    return ids;
}


//  表示・非表示の設定

function SetEnabled(resid, flag) {
    try {
        $.ajax({
            url: "configmode.aspx",
            type: 'POST',
            async: false,
            data: {
                'setenabled': flag,
                'resid': resid
            },
            dataType: "text",
            success: function (ret) {
            },
            error: function () {
            }
        });
    } catch (e) { }
}

//  ボタンの表示・非表示

function SetButtonEnabled(resid, oresid) {
    var btn = document.getElementById(oresid);
    if (!btn.style.filter && !btn.style.opacity) {
        btn.style.filter = "opacity(50%)";
        btn.style.opacity = "0.5";
        SetEnabled(resid, false);
    } else {
        btn.style.filter = "";
        btn.style.opacity = "";
        SetEnabled(resid, true);
    }
}

//  ダイアログ表示
var callbackForCnDialog;
function ShowCnDialog(winid, args, options, callbackFunc) {
    callbackForCnDialog = callbackFunc;
    if (!IsEnabled(winid)) {
        return afterCnDialog({ "result": 1 }, args);
    }
    //switch (args["type"]) {
    //    case "confirm":
    //        return confirm(args["message"]);
    //        break;
    //    case "alert":
    //    case "warn":
    //        alert(args["message"]);
    //        return;
    //        break;
    //}
    if (!options) {
        options = "scroll:no;status:no;resizable:no;help:no;dialogWidth:350px;dialogHeight:200px;";
    }
    args["winid"] = winid;
    var params = "?";
    for (var keyString in args) {
        if (keyString == "msgex" || keyString =="message") continue;
        params += keyString + '=' + encodeURIComponent(args[keyString]) + '&';
    }
    $('#cnfwModalDialogFrame').attr('title', args["title"]);
    cnfwShowModalDialog("CnDialog.aspx" + params, args, options, afterCnDialog);
    return;
}

function afterCnDialog(returnValue, args) {
    var res = returnValue;
    var retVal;
    try {
        if (res["result"]) {
            retVal = res["result"];
        } else {
            //  xボタンで閉じられたので返値がない
            retVal = 3;
        }
    } catch (e) {
        retVal = 3;
    }
    if (args['yesno'] == 'true') {
        if (retVal == 1)
            retVal = true;
        else
            retVal = false;
    }
    if (callbackForCnDialog) callbackForCnDialog(retVal, args);
}

//  はい、いいえの確認ダイアログを表示する。
//  winid:ダイアログ画面ID
//  msg:ダイアログに表示するメッセージ
//  strTitle:ダイアログに表示するタイトル
//  defaultBtn:フォーカスを「はい」にあてるか「いいえ」にあてるか。3なら「いいえ」にあてる。それ以外なら「はい」にあてる
//  type:確認ならconfirm、注意ならalert、警告ならwarnなど
//  fid:特定のファイルに依存するダイアログの場合指定できる(メッセージ部分の##fname##がファイル名に変わる)
function ShowConfirmDialog(winid, msg, strTitle, defaultBtnVal, type, fid, callbackFunc) {
    if (!strTitle) strTitle = '';
    if (!type) type = 'confirm';
    if (defaultBtnVal != 3) defaultBtnVal = 1;
    if (!fid) fid = '';
    return confirm(msg);
}
function cnfwConfirm(winid, msg, strTitle, defaultBtnVal, type, fid, callbackFunc) {
    if (!strTitle) strTitle = '';
    if (!type) type = 'confirm';
    if (defaultBtnVal != 3) defaultBtnVal = 1;
    if (!fid) fid = '';
    ShowCnDialog(winid, { negative: 'true', yesno: 'true', title: strTitle, type: type, message: msg, defaultBtn: defaultBtnVal, fid: fid }, null, callbackFunc);
}

//  OkボタンのみのAlertダイアログを表示する。
//  winid:ダイアログ画面ID
//  msg:ダイアログに表示するメッセージ
//  strTitle:ダイアログに表示するタイトル
//  type:注意ならalert、情報ならinfoなど
function ShowParentAlertDialog(winid, msg, strTitle, type, callback) {
    if (!strTitle) strTitle = 'FullWEB';
    if (!type) type = 'alert';
    var res = parent.ShowCnDialog(winid, { title: strTitle, type: type, message: msg }, null, callback);
    if (res == 1) {
        return true;
    } else {
        return false;
    }
}

//  OkボタンのみのAlertダイアログを表示する。
//  winid:ダイアログ画面ID
//  msg:ダイアログに表示するメッセージ
//  strTitle:ダイアログに表示するタイトル
//  type:注意ならalert、情報ならinfoなど
function ShowAlertDialog(winid, msg, strTitle, type, callback) {
    if (!strTitle) strTitle = 'FullWEB';
    if (!type) type = 'alert';
    var res = ShowCnDialog(winid, { title: strTitle, type: type, message: msg }, null, callback);
    if (res == 1) {
        return true;
    } else {
        return false;
    }
}

//  OkボタンのみのAlertダイアログを表示する。
//  winid:ダイアログ画面ID
//  msg:ダイアログに表示するメッセージ
//  strTitle:ダイアログに表示するタイトル
//  type:注意ならalert、情報ならinfoなど
function ShowAlertDialogEx(winid, msgHtml, strTitle, type, callback, param) {
    ShowCnDialog(winid, { title: strTitle, type: type, msgex: msgHtml }, null, callback);
    //if (!strTitle) strTitle = 'FullWEB';
    //if (!type) type = 'alert';
    //var $dialogDiv = $('<div id="cnfwSadExDiv"/>')
    //    .html(msgHtml)
    //    .css({
    //        'position':'absolute'
    //    })
    //    .attr('title', strTitle);
    //$('body').append($dialogDiv);
    //$dialogDiv.dialog({
    //    autoOpen: false,
    //    modal: true,
    //    open: function () {
    //    },
    //    close: function () {
    //        $("#cnfwSadExDiv").remove();
    //        if (callback) callback(param);
    //    }
    //}).dialog('open');
}

//  部品の表示・非表示設定
function CbDispClick(resid) {
    if (window.event.srcElement.checked == true) {
        SetEnabled(resid, true);
    } else {
        SetEnabled(resid, false);
    }
    window.event.cancelBubble = true;
    return false;
}

//  HELPモードの取得・設定
function IsHelpMode() {
    try {
        var mw = GetRootWin();
        if (mw == null || typeof mw == "undifined") return false;
        var w = mw['m_helpWin'];
        if (w != null && typeof mw != "undifined" && !w.closed) {
            return true;
        } else {
            return false;
        }
    } catch (ex) {
        return false;
    }
}

//  ヘルプモードを設定する
//  val：trueもしくはfalse
function SetHelpMode(val) {
    var mw = GetRootWin();
    if (!mw) return;
    var w;
    if (val) {
        var initp = new Array();
        initp[0] = 0;
        initp[1] = 0;
        initp[2] = 300;
        initp[3] = 500;
        var p = new Array();
        cnfw_loadWinPosition("cnhelp", p, initp);
        var leftPos = p[0];
        var topPos = p[1];
        w = window.open("help.aspx?init=true", "cnhelp", "left=" + p[0] + ",top=" + p[1] + ",width=" + p[2] + ",height=" + p[3] + "location=no,resizable=yes,scrollbars=yes");
        if (top.setHelpWin) {
            top.setHelpWin(w);
        } else if (parent.setHelpWin) {
            parent.setHelpWin(w);
        } else if (window.opener && window.opener.setHelpWin) {
            window.opener.setHelpWin(w);
        }
        var wdiff = leftPos - w.screenLeft;
        var tdiff = topPos - w.screenTop;
        w.moveBy(wdiff, tdiff);
        if (w.screenTop < 30) {
            //IE6だとタイトルバーの部分だけずれるのでその修正
            w.moveBy(0, 30 - w.screenTop);
        }
        w.focus();
    } else {
        var hw = mw['m_helpWin'];
        if (hw && !hw.closed) {
            hw.isClosing = true;
            hw.close();
        }
    }
    mw['m_helpWin'] = w;
}

//  ヘルプをヘルプウィンドウに表示する。
//  key：residを指定する
function ShowHelp(key) {
    if (IsHelpMode()) {
        var mw = GetRootWin();
        if (mw == null || typeof mw == "undifined") return ;
        var w = mw['m_helpWin'];
        try {
            if (w != null && typeof w != "undifined" && !w.closed && w.document.readyState == 'complete') {
                w.showHelp(key);
            }
        } catch(e) {}
    }
}

//  既存部品にMouseOverイベントハンドラを追加
function AddMouseOverHandler(elems, winid) {
    for (i = 0; i < elems.length; i++) {
        var elem = elems(i);
        var en = elem.tagName.toLowerCase();
        if ((en != "input") && (en != "textarea") && (en != "submit") && (en != "img") && (en != "select") && (en != "a")) {
            continue;
        }
        var type;
        if (en == "input") {
            type = elem.attributes.type.value.toLowerCase();
        } else {
            type = en;
        }

        if (type == "button" || type == "checkbox" || type == "radio" || type == "text" || type == "textarea" || type == "submit" || type == "img" || type == "select" || type == "a") {
            try {
                var elemid = elem.id;
                if (!elemid) elemid = '';
                if (winid && elemid.indexOf(winid) != 0) {
                    elem.attachEvent("onmouseover", new Function("ShowHelp('" + winid + elem.id + "')"));
                } else {
                    elem.attachEvent("onmouseover", new Function("ShowHelp('" + elem.id + "')"));
                }
            } catch (e) { }
        }
    }

}
//  指定したid配列から部品を探してMouseOverイベントハンドラを追加する
function SetMouseOver(elemids) {
    for (i = 0; i < elemids.length; i++) {
        try {
            var id = elemids[i];
            var elem = document.getElementById(id);
            if (elem) {
                elem.attachEvent("onmouseover", new Function("ShowHelp('" + elem.id + "')"));
            }
        } catch (e) { }
    }
 }

//  おおもとのWindowのTopを返す
function GetRootWin() {
    if (_hasRootWin) return _myRootWin;
    _hasRootWin = true;

    var w = window;
    if (w.GetOpenerWin) {
        //  modalDialogではOpenerはうまくとれないので、各aspxで用意
        w = w.GetOpenerWin();
    }

    try {
        while (true) {
            var w = GetRootWinFrom(w);
            if (w.opener == null) {
                if (w._fww == undefined)    //  FullWEBのウィンドウかどうかを確認
                    w = null;

                _myRootWin = w;
                return w;
            } else {
                if (w.opener.location.href == w.location.href) return w;

                //  まだtopから先があった。entry.aspxとか。
                w = w.opener;
            }
        }
    } catch (e) {
        _myRootWin = null;
        return null;        
    }
    _myRootWin = null;
}

function GetRootWinFrom(pw) {
    if (pw == null || typeof pw == "undifined") return null;
    while (pw.opener != null) {
        if (pw.opener._fww == undefined) break;    //  FullWEBのウィンドウかどうかを確認
        if (pw.opener.location.href == pw.location.href) break;
        pw = pw.opener;
    }
    var tw = pw.top;
    if (tw._fww == undefined) tw = pw;    //  FullWEBのウィンドウかどうかを確認
    return tw;
}

function cnfw_IsEmptyMnuPopup(mnuPopup) {
    return false;
   // var mp = igmenu_getMenuById(mnuPopup);
   // if (!mp) return true;

   // var item;
   // for (var index in mp.getItems(0)) {
   //     item = mp.getItems(0)[index];
   //     if (!item.IsSeparator()) return false;
   // }
   //return true;
}
//  bodyからのmouseoverイベントでヘルプ表示
function cnfw_MOver() {
    try {
        var id = event.srcElement.id;
        if (id) ShowHelp(id);
    } catch (e) { }
}

//Cloudマニュアル用のIDを取得
function cnfw_GetCloudManualID() {
    var url = "help.aspx?cmanual=true";
    try {
        $.ajax({
            url: "help.aspx",
            type: 'POST',
            async: false,
            data: {
                'cmanual': 'true'
            },
            dataType: "text",
            success: function (ret) {
                return ret;
            },
            error: function () {
            }
        });
    } catch (e) { }
    return "";
}

//Cloudマニュアル画面を開く
function cnfw_OpenCloudManual() {
	var id = cnfw_GetCloudManualID();
	window.open("http://cncmanual.cloudapp.net/cmanual.aspx?id=" + id, "cmanual", "left=0,top=0,width=900,height=800,resizable=no,dependent=yes,status=yes");
	cancelEv();
	window.event.keyCode = 0;
}
//ウィンドウの位置を再調整する。
//win:位置取得用のwindowオブジェクト, keyname:キー名, movewin:移動用のwindowオブジェクト。
//通常はwin=movewinだが、Frameに埋め込まれるなどしている場合、別々にした方がいい場合がある。
function cnfw_adjustWinLoc(win, keyname, movewin) {
    try {
        var p = new Array();
        cnfw_loadWinPosition(keyname, p);
        if (win == null || !p[0] || !p[1]) return;
        if (movewin == null) movewin = win;

        var ldiff = p[0] - win.screenLeft;
        var tdiff = p[1] - win.screenTop;
        var rw = GetRootWin();
        if (rw != null) {
            if (!rw['m_ldiff' + keyname]) {
                rw['m_ldiff' + keyname] = ldiff;
                rw['m_tdiff' + keyname] = tdiff;
                if (movewin.dialogLeft) {
                    //modalDialogの場合moveByがきかないのでこちらに
                    var dl = parseInt(movewin.dialogLeft);
                    var dt = parseInt(movewin.dialogTop);
                    movewin.dialogLeft = (dl + ldiff) + 'px';
                    movewin.dialogTop = (dt + tdiff) + 'px';
                } else {
                    movewin.moveBy(ldiff, tdiff);
                    if (win.screenTop < 30) {
                        //IE6だとタイトルバーの部分だけずれるのでその修正
                        movewin.moveBy(0, 30 - win.screenTop);
                    }
                }
            }
        }
    } catch (e) { }
}

//ウィンドウのサイズと位置を再調整する。
function cnfw_adjustWin(win, keyname) {
    var p = new Array();
    cnfw_loadWinPosition(keyname, p);
    if (win == null || !p[0] || !p[1]) return;

    var w = parseInt(p[2]) - win.document.body.clientWidth;
    var h = parseInt(p[3]) - win.document.body.clientHeight;
    win.resizeBy(w, h);
    var wdiff = p[0] - win.screenLeft;
    var tdiff = p[1] - win.screenTop;
    win.moveBy(wdiff, tdiff);
    if (win.screenTop < 30) {
        //IE6だとタイトルバーの部分だけずれるのでその修正
        win.moveBy(0, 30 - win.screenTop);
    }
}


// サーバ日時文字列を取得
function cnfw_Nanji() {
    var retVal = "";
    try {
        $.ajax({
            url: "nanji.aspx",
            type: 'POST',
            async: false,
            data: { },
            dataType: "text",
            success: function (ret) {
                retVal = ret;
            },
            error: function () {
            }
        });
    } catch (e) { }
    return retVal;
}

//  部署内フロー設定
function cnfw_RouteSetting(fid, pw) {
    var ugid = 0;
    try {
        $.ajax({
            url: "fwajaxproc.aspx",
            type: 'POST',
            async: false,
            data: {
                'cmd': 'GetRouteSettingUgid',
                'fid': fid
            },
            dataType: "json",
            success: function (res) {
                if (res.error != "") {
                    ShowAlertDialog("D312", res.error, "");
                    return;
                }
                ugid = res.data;
            },
            error: function () {
            }
        });
        if (ugid == 0 || ugid == '0') return;

        var w = window.open("wfSelectUgUser.aspx?bunairoute=true&wtype=b&ugid=" + ugid + "&fid=" + fid,
                            "routesetting", "width=800,height=600,resizable=no,dependent=yes,status=yes", true);
        cnfw_adjustWinLoc(w, "routesetting", w);
        if (pw != undefined)
            pw.AddWindow(w);
    } catch (e) { }
    return false;
}

//  代理設定
function cnfw_SetSub(pw) {
    try {
        var w = window.open("wfSetSub.aspx", "wfSetSub", "width=1050,height=600,resizable=yes,dependent=yes,scrollbars=no,status=yes", true);
        cnfw_adjustWinLoc(w, "routesetting", w);
        if (pw != undefined)
            pw.AddWindow(w);
    } catch (e) {
    }
    return false;
}

//  承認ルート変更
function cnfw_UpdateAppRoute(fid, pw) {
    try {
        //  自分の承認担当ファイルかをチェック
        var ret = true;
        $.ajax({
            url: "fwajaxproc.aspx",
            type: 'POST',
            async: false,
            data: {
                'cmd': 'CheckScStartDifference',
                'fid': fid
            },
            dataType: "json",
            success: function (res) {
                if (res.error != "") {
                    ShowAlertDialog("D319", res.error, "");
                    ret = false;
                    return;
                }
                ugid = res.data;
            },
            error: function () {
                ret = false;
            }
        });
        if (!ret) return;


        var w = window.open("wfSelectUgUser.aspx?wtype=c&fid=" + fid,
                            "updateroute", "width=800,height=600,resizable=no,dependent=yes,status=yes", true);
        cnfw_adjustWinLoc(w, "updateroute", w);
        if (pw != undefined)
            pw.AddWindow(w);
    } catch (e) { }
    return false;
}

//  urlパラメータの解析
function cnfw_parseParam() {
    var arg = new Object;
    url = location.search.substring(1).split('&');
    for (i = 0; i < url.length; i++) {
        var k = url[i].split('=');
        arg[k[0]] = k[1];
    }
    return arg;
}
//  BOMから起動された場合前面表示
function setForegroundWin(holdSockId) {
    try {
        if (!window.opener) {
            return;
        }
        var funcCalled = false;
        if (window.opener.getCurrentClientSockId) {
            var sockId = window.opener.getCurrentClientSockId(holdSockId);
            var title = document.title;
            window.opener.setForeground(sockId, title, window.location.pathname);
            funcCalled = true;
        } else {
            var bomf = window.opener.frames['bomframe'];
            if (bomf && bomf.getCurrentClientSockId) {
                var sockId = bomf.getCurrentClientSockId(holdSockId);
                var title = document.title;
                bomf.setForeground(sockId, title, window.location.pathname);
                funcCalled = true;
            }
        }

        if (funcCalled) return;

        if (window.opener.parent && window.opener.parent.getCurrentClientSockId) {
            var sockId = window.opener.parent.getCurrentClientSockId(holdSockId);
            var title = document.title;
            window.opener.parent.setForeground(sockId, title, window.location.pathname);
            funcCalled = true;
        }

        if (funcCalled) return;

        //  default.aspxのframes['work']からの呼び出し
        if (window.opener.parent.location.href.toLowerCase().indexOf("default.aspx") > 0) {
            var bomf = window.opener.parent.frames['main'].frames['bomframe'];
            var sockId = bomf.getCurrentClientSockId(holdSockId);
            var title = document.title;
            bomf.setForeground(sockId, title, window.location.pathname);
            funcCalled = true;
        }
    } catch (e) {
        console.log(e.message);
    }
}

//  日付フォーマットのチェック
function isValidDate(s) {
    var matches = /^(\d+)\/(\d+)\/(\d+)$/.exec(s);
    if (!matches) {
        return false;
    }
    var y = parseInt(matches[1]);
    var m = parseInt(matches[2]);
    var d = parseInt(matches[3]);
    if (m < 1 || m > 12 || d < 1 || d > 31) {
        return false;
    }
    var dt = new Date(y, m - 1, d, 0, 0, 0, 0);
    if (dt.getFullYear() != y
        || dt.getMonth() != m - 1
        || dt.getDate() != d) {
        return false;
    }
    return true;
}

//  メッセージWindow用
var m_windowTitle = "";
var m_windowMsg = "";
var m_windowCallback = null;
function getCnWindowTitle() {
    return m_windowTitle;
}
function getCnWindowMsg() {
    return m_windowMsg;
}
function getCnWndowCallback() {
    return m_windowCallback;
}
function showCnMessageWindow(winid, args, options, callbackFunc, pw) {
    var title = args['title'];
    if (!title) title = "";
    if (!winid) winid = "D000";
    var msg = args['message'];
    if (!msg) msg = "";
    var type = args['type'];
    if (!type) type = "";

    m_windowTitle = title + "(" + winid + ")";
    m_windowMsg = msg;
    m_windowCallback = callbackFunc;
    if (!options) {
        options = "width=400,height=200,dependent=yes,scrollbars=no,status=yes,resizable=yes";
    }
    var w = window.open("CnMessageWindow.aspx?type=" + type + "&winid=" + winid, "_blank", options);

    try {
        if (!pw && pw.AddWindow) {
            pw.AddWindow(w, "cnmsg" + d.toUTCString());
        }
    } catch (e) {
        console.log(e.message);
    }
}

